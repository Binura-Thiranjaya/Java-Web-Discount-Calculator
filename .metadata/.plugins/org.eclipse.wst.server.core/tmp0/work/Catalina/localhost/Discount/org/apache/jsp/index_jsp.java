/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.23
 * Generated at: 2022-10-11 03:38:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import database.DbConnection;
import controller.DiscountController;
import database.Result;
import java.sql.ResultSet;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("database.Result");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("database.DbConnection");
    _jspx_imports_classes.add("controller.DiscountController");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<title>Nippon Paint</title>\n");
      out.write("<!-- Bootstrap css -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n");
      out.write("	integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"container mt-2 \">\n");
      out.write("		<h2 class=\"text-center text-uppercase pb-4\">SAP Discount\n");
      out.write("			Calculator</h2>\n");
      out.write("		<form action=\"index\" method=\"post\">\n");
      out.write("			<div class=\"form-group row  pb-2 \">\n");
      out.write("				<label for=\"customer_id_selector\" class=\"col-sm-2 col-form-label\">Customer\n");
      out.write("					Id :-</label>\n");
      out.write("				<div class=\"col-sm-8\">\n");
      out.write("					<select class=\"form-control\" id=\"customer_id\" name=\"customer_id\">\n");
      out.write("						<option>Select ID</option>\n");
      out.write("						");

						ResultSet rs = DbConnection.search("SELECT customer_code FROM `customers`");
						while (rs.next()) {
						
      out.write("\n");
      out.write("						<option>");
      out.print("" + Integer.parseInt(rs.getString("customer_code")));
      out.write("</option>\n");
      out.write("						");
}
      out.write("\n");
      out.write("					</select>\n");
      out.write("				</div>\n");
      out.write("				<button type=\"submit\" class=\"btn btn-outline-danger\">Calcualate\n");
      out.write("					Discount</button>\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("		<table class=\"table table-striped\">\n");
      out.write("			<thead class=\"thead-dark\">\n");
      out.write("				<tr>\n");
      out.write("					<th scope=\"col\">Invoice No</th>\n");
      out.write("					<th scope=\"col\">Customer Code</th>\n");
      out.write("					<th scope=\"col\">Customer Name</th>\n");
      out.write("					<th scope=\"col\">Discount</th>\n");
      out.write("				</tr>\n");
      out.write("			</thead>\n");
      out.write("			<tbody>\n");
      out.write("				");

				DiscountController objDiscountController = new DiscountController();
				ResultSet rs1 = DbConnection.search(
						"SELECT i.inv_number,i.customer_code,c.customer_name, DateDiff(invoice_setoff_date,invoice_date) AS Day ,d.material_group,SUM(d.quantity) aS Total FROM invoice i INNER JOIN invoice_detail d ON i.inv_number = d.invoice_number INNER JOIN customers c ON i.customer_code = c.customer_code GROUP BY d.invoice_number,d.material_group");

				while (rs1.next()) {

					int timeSlotID = objDiscountController.findTimeSlotID(Integer.parseInt(rs1.getString("Day")));
					int materialID = objDiscountController.findMaterialID(rs1.getString("material_group"));
					int value = objDiscountController.findValue(timeSlotID, materialID);
					int Discount = objDiscountController.Discount(value, Integer.parseInt(rs1.getString("Total")));
				
      out.write("\n");
      out.write("				<tr>\n");
      out.write("					<td>");
      out.print("" + Integer.parseInt(rs1.getString("inv_number")));
      out.write("</td>\n");
      out.write("					<td>");
      out.print("" + Integer.parseInt(rs1.getString("i.customer_code")));
      out.write("</td>\n");
      out.write("					<td>");
      out.print(rs1.getString("c.customer_name"));
      out.write("</td>\n");
      out.write("					<td>");
      out.print(Discount);
      out.write("</td>\n");
      out.write("				</tr>\n");
      out.write("				");
}
      out.write("\n");
      out.write("			</tbody>\n");
      out.write("		</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("	<!-- Bootstrap Js -->\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"\n");
      out.write("		integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js\"\n");
      out.write("		integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js\"\n");
      out.write("		integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\n");
      out.write("		crossorigin=\"anonymous\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
